{"meta":{"title":"Yangy学习记录","subtitle":"","description":"乘风破浪会有时","author":"yangy","url":"http://18837176143.github.io","root":"/18837176143.github.io/"},"pages":[{"title":"about","date":"2020-08-17T04:38:13.000Z","updated":"2020-08-17T06:26:31.632Z","comments":false,"path":"about/index.html","permalink":"http://18837176143.github.io/about/index.html","excerpt":"","text":"姑的小屋 与&nbsp; cungduafa&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini() document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"分类","date":"2020-04-20T16:00:00.000Z","updated":"2020-08-17T04:36:33.665Z","comments":false,"path":"categories/index.html","permalink":"http://18837176143.github.io/categories/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"ategorirescategorire wq ;\nx hexo new page ategorirescategorire","date":"2020-08-17T04:35:13.000Z","updated":"2020-08-17T04:35:13.918Z","comments":true,"path":"ategorirescategorirewq-xhexo-new-page-ategorirescategorire/index.html","permalink":"http://18837176143.github.io/ategorirescategorirewq-xhexo-new-page-ategorirescategorire/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"links","date":"2020-08-17T04:43:14.000Z","updated":"2020-08-17T04:43:52.320Z","comments":true,"path":"links/index.html","permalink":"http://18837176143.github.io/links/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"留言板","date":"2020-08-17T04:41:35.000Z","updated":"2020-08-17T04:42:35.539Z","comments":true,"path":"conmment/index.html","permalink":"http://18837176143.github.io/conmment/index.html","excerpt":"","text":"有什么想说的? 有什么想问的? document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"},{"title":"tags","date":"2020-08-17T04:37:13.000Z","updated":"2020-08-17T04:37:45.523Z","comments":false,"path":"tags/index.html","permalink":"http://18837176143.github.io/tags/index.html","excerpt":"","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });"}],"posts":[{"title":"","slug":"利用Stream和Lamda完成表的自连接生成多级目录结构","date":"2020-08-18T01:06:52.321Z","updated":"2020-08-18T01:09:41.944Z","comments":true,"path":"2020/08/18/利用Stream和Lamda完成表的自连接生成多级目录结构/","link":"","permalink":"http://18837176143.github.io/2020/08/18/%E5%88%A9%E7%94%A8Stream%E5%92%8CLamda%E5%AE%8C%E6%88%90%E8%A1%A8%E7%9A%84%E8%87%AA%E8%BF%9E%E6%8E%A5%E7%94%9F%E6%88%90%E5%A4%9A%E7%BA%A7%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/","excerpt":"","text":"title: Stream和Lamda操作 ** 先获取一级目录** //查询所有,PmsCategory和pmsCategroyService都是已经定义好的 //实体类和接口 List&lt;PmsCategory>list=pmsCategoryService.list(); //通过流和Lamda过滤 List&lt;PmsCategory>firstList=list.stream() //过滤所有父Id为0的对象，既一级目录 .filter(pmcategory->&amp;#123; return pmscategory.getParentId==0; &amp;#125;) .map(pmscategory->&amp;#123; pmsCategory.setList(createChildren(pmsCategory,list)); return pmsCategory; &amp;#125;) .collect(Collectors.toList()); 编写一个递归实现生成多级子目录 public List&lt;PmsCategory> createChildren(PmsCategory pm,List&lt;PmsCategory> pms){ List&lt;PmsCategory>pc=pms.stream() //过滤出所有父Id等于pmId的对象，即子目录 .filter(item->{ item.getParentId==pm.getParentId; }) .map(item->{ //递归实现子目录下子目录 item.setList(createChildren(item,pms)); return item; }) //转为List集合 .collect(Collectors.toList()); return pc; } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-08-16T11:44:13.091Z","updated":"2020-08-17T04:18:53.464Z","comments":true,"path":"2020/08/16/hello-world/","link":"","permalink":"http://18837176143.github.io/2020/08/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[],"tags":[]}],"categories":[],"tags":[]}